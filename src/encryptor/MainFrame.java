package encryptor;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class MainFrame extends javax.swing.JFrame {

    static final int PLAY_FILE = 1;
    static final int FS = 2;
    static final int XPLANE = 4;
    static final int THETA = 8;
    static final int FRONT = 16;
    static final int TOP = 32;
    static final int ALTITUDE = 64;
    static final int TRACE = 128;
    static final int RECORD = 256;
    int license = 0;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        license = 0;
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/draw/h.jpg")));
        setTitle("鴻祺航太 license 產生程式");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        macLabel = new javax.swing.JLabel();
        macTextField = new javax.swing.JTextField();
        thetaCheckBox = new javax.swing.JCheckBox();
        frontCheckBox = new javax.swing.JCheckBox();
        topCheckBox = new javax.swing.JCheckBox();
        altitudeCheckBox = new javax.swing.JCheckBox();
        traceCheckBox = new javax.swing.JCheckBox();
        fileNameButton = new javax.swing.JButton();
        fileNameLabel = new javax.swing.JLabel();
        genLicenseButton = new javax.swing.JButton();
        playFileCheckBox = new javax.swing.JCheckBox();
        fsCheckBox = new javax.swing.JCheckBox();
        xplaneCheckBox = new javax.swing.JCheckBox();
        recordCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        macLabel.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        macLabel.setText("mac address");

        macTextField.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        macTextField.setText("64-27-37-39-1B-51");

        thetaCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        thetaCheckBox.setText("俯仰圖");

        frontCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        frontCheckBox.setText("滾轉圖");

        topCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        topCheckBox.setText("方向圖");

        altitudeCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        altitudeCheckBox.setText("高度圖");

        traceCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        traceCheckBox.setText("軌跡圖");

        fileNameButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        fileNameButton.setText("選取檔案");
        fileNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameButtonActionPerformed(evt);
            }
        });

        fileNameLabel.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        fileNameLabel.setText("D:\\temp\\license.txt");

        genLicenseButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        genLicenseButton.setText("產生 license 檔");
        genLicenseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genLicenseButtonActionPerformed(evt);
            }
        });

        playFileCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        playFileCheckBox.setText("播放檔案");

        fsCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        fsCheckBox.setText("FS");

        xplaneCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        xplaneCheckBox.setText("xplane");

        recordCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        recordCheckBox.setText("記錄");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recordCheckBox)
                    .addComponent(xplaneCheckBox)
                    .addComponent(fsCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(macLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(macTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileNameButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(genLicenseButton)
                    .addComponent(traceCheckBox)
                    .addComponent(altitudeCheckBox)
                    .addComponent(topCheckBox)
                    .addComponent(frontCheckBox)
                    .addComponent(thetaCheckBox)
                    .addComponent(playFileCheckBox))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameButton)
                    .addComponent(fileNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(macTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(macLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playFileCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xplaneCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thetaCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frontCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(altitudeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(traceCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addComponent(genLicenseButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser c = new JFileChooser();
        c.setCurrentDirectory(new File("C:"));       
        int rVal = c.showOpenDialog(MainFrame.this);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            String fileName = c.getCurrentDirectory().toString() + "\\" + c.getSelectedFile().getName();
            fileNameLabel.setText(fileName);
        }
    }//GEN-LAST:event_fileNameButtonActionPerformed

    private void genLicenseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genLicenseButtonActionPerformed
        PrintWriter out = null;
        try {
            // TODO add your handling code here:
            license = 0;
            if (this.playFileCheckBox.isSelected()) {
                license |= PLAY_FILE;
            }
            if (this.fsCheckBox.isSelected()) {
                license |= FS;
            }
            if (this.xplaneCheckBox.isSelected()) {
                license |= XPLANE;
            }
            if (this.thetaCheckBox.isSelected()) {
                license |= THETA;
            }
            if (this.frontCheckBox.isSelected()) {
                license |= FRONT;
            }
            if (this.topCheckBox.isSelected()) {
                license |= TOP;
            }
            if (this.altitudeCheckBox.isSelected()) {
                license |= ALTITUDE;
            }
            if (this.traceCheckBox.isSelected()) {
                license |= TRACE;
            }
            if (this.recordCheckBox.isSelected()) {
                license |= RECORD;
            }
            String str = this.macTextField.getText() + "," + license;
            System.out.println(str);
            String encrypt = Encryptor.encrypt(str);
            System.out.println(encrypt);
            String decrypt = Encryptor.decrypt(encrypt);
            System.out.println(decrypt);
            String fn = this.fileNameLabel.getText();
            out = new PrintWriter(new BufferedWriter(new FileWriter(fn)));
            out.println(encrypt);
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            out.close();
        }

    }//GEN-LAST:event_genLicenseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox altitudeCheckBox;
    private javax.swing.JButton fileNameButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JCheckBox frontCheckBox;
    private javax.swing.JCheckBox fsCheckBox;
    private javax.swing.JButton genLicenseButton;
    private javax.swing.JLabel macLabel;
    private javax.swing.JTextField macTextField;
    private javax.swing.JCheckBox playFileCheckBox;
    private javax.swing.JCheckBox recordCheckBox;
    private javax.swing.JCheckBox thetaCheckBox;
    private javax.swing.JCheckBox topCheckBox;
    private javax.swing.JCheckBox traceCheckBox;
    private javax.swing.JCheckBox xplaneCheckBox;
    // End of variables declaration//GEN-END:variables
}
